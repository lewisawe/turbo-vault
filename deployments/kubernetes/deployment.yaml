apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-agent
  namespace: vault-agent
  labels:
    app.kubernetes.io/name: vault-agent
    app.kubernetes.io/component: server
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vault-agent
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault-agent
        app.kubernetes.io/component: server
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8200"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: vault-agent
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: vault-agent
        image: vault-agent:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8200
          protocol: TCP
        - name: metrics
          containerPort: 8201
          protocol: TCP
        env:
        - name: VAULT_AGENT_CONFIG_PATH
          value: "/etc/vault-agent/config.yaml"
        - name: VAULT_AGENT_DATA_PATH
          value: "/var/lib/vault-agent"
        - name: VAULT_AGENT_LOG_LEVEL
          value: "info"
        - name: VAULT_AGENT_BIND_ADDRESS
          value: "0.0.0.0:8200"
        - name: VAULT_AGENT_METRICS_ADDRESS
          value: "0.0.0.0:8201"
        volumeMounts:
        - name: config
          mountPath: /etc/vault-agent
          readOnly: true
        - name: data
          mountPath: /var/lib/vault-agent
        - name: tls-certs
          mountPath: /etc/ssl/vault-agent
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: config
        configMap:
          name: vault-agent-config
          defaultMode: 0644
      - name: data
        persistentVolumeClaim:
          claimName: vault-agent-data
      - name: tls-certs
        secret:
          secretName: vault-agent-tls
          defaultMode: 0600
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - vault-agent
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "vault-agent.io/dedicated"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"